//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace FAR.EL.WinApp.UserServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ELResult", Namespace="http://schemas.datacontract.org/2004/07/FAR.EL.Common")]
    [System.SerializableAttribute()]
    public partial class ELResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SuccessField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Success {
            get {
                return this.SuccessField;
            }
            set {
                if ((this.SuccessField.Equals(value) != true)) {
                    this.SuccessField = value;
                    this.RaisePropertyChanged("Success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="UserServiceReference.IUserService")]
    public interface IUserService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/Login", ReplyAction="http://tempuri.org/IUserService/LoginResponse")]
        FAR.EL.WinApp.UserServiceReference.ELResult Login(FAR.EL.Models.LoginModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/Login", ReplyAction="http://tempuri.org/IUserService/LoginResponse")]
        System.Threading.Tasks.Task<FAR.EL.WinApp.UserServiceReference.ELResult> LoginAsync(FAR.EL.Models.LoginModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/Register", ReplyAction="http://tempuri.org/IUserService/RegisterResponse")]
        FAR.EL.WinApp.UserServiceReference.ELResult Register(FAR.EL.Models.RegisterModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/Register", ReplyAction="http://tempuri.org/IUserService/RegisterResponse")]
        System.Threading.Tasks.Task<FAR.EL.WinApp.UserServiceReference.ELResult> RegisterAsync(FAR.EL.Models.RegisterModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetDr", ReplyAction="http://tempuri.org/IUserService/GetDrResponse")]
        FAR.EL.Models.GetDrModel[] GetDr();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetDr", ReplyAction="http://tempuri.org/IUserService/GetDrResponse")]
        System.Threading.Tasks.Task<FAR.EL.Models.GetDrModel[]> GetDrAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserServiceChannel : FAR.EL.WinApp.UserServiceReference.IUserService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserServiceClient : System.ServiceModel.ClientBase<FAR.EL.WinApp.UserServiceReference.IUserService>, FAR.EL.WinApp.UserServiceReference.IUserService {
        
        public UserServiceClient() {
        }
        
        public UserServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public FAR.EL.WinApp.UserServiceReference.ELResult Login(FAR.EL.Models.LoginModel model) {
            return base.Channel.Login(model);
        }
        
        public System.Threading.Tasks.Task<FAR.EL.WinApp.UserServiceReference.ELResult> LoginAsync(FAR.EL.Models.LoginModel model) {
            return base.Channel.LoginAsync(model);
        }
        
        public FAR.EL.WinApp.UserServiceReference.ELResult Register(FAR.EL.Models.RegisterModel model) {
            return base.Channel.Register(model);
        }
        
        public System.Threading.Tasks.Task<FAR.EL.WinApp.UserServiceReference.ELResult> RegisterAsync(FAR.EL.Models.RegisterModel model) {
            return base.Channel.RegisterAsync(model);
        }
        
        public FAR.EL.Models.GetDrModel[] GetDr() {
            return base.Channel.GetDr();
        }
        
        public System.Threading.Tasks.Task<FAR.EL.Models.GetDrModel[]> GetDrAsync() {
            return base.Channel.GetDrAsync();
        }
    }
}
